name: Build and Push Image
on:
  # merge_group:
  workflow_dispatch:

  schedule:
    - cron: "0 6 * * *" # at 06:00 UTC (midnight CST)

  pull_request:
    branches:
      - main
      - testing
    paths-ignore:
      - "**.md"

  push:
    branches:
      - main
      - testing
    tags:
      - "v*.*.*"
    paths-ignore:
      - "**.md"

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}

env:
  DOCKER_BUILDKIT: 1
  IMAGE_FLAVOR: asus
  AKMODS_FLAVOR: asus
  FEDORA_MAJOR_VERSION: 39
  IMAGE_NAME: orora-bluefin
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install buildah

      # Image verification
      - name: Verify base image
        uses: EyeCantCU/cosign-action/verify@v0.2.2
        with:
          containers: silverblue-${{ env.IMAGE_FLAVOR }}:${{ env.FEDORA_MAJOR_VERSION }}

      - name: Verify Chainguard images
        uses: EyeCantCU/cosign-action/verify@v0.2.2
        with:
          registry: cgr.dev/chainguard
          containers: dive, flux, helm, ko, minio, kubectl
          oidc-issuer: https://token.actions.githubusercontent.com
          cert-identity: https://github.com/chainguard-images/images/.github/workflows/release.yaml@refs/heads/main

      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@v6
        with:
          remove-large-packages: false

      - name: Get Current Fedora Version
        id: labels
        shell: bash
        run: |
          set -eo pipefail
          ver=$(skopeo inspect docker://ghcr.io/ublue-os/silverblue-${{ env.IMAGE_FLAVOR }}:${{ env.FEDORA_MAJOR_VERSION }} | jq -r '.Labels["org.opencontainers.image.version"]')
          if [ -z "$ver" ] || [ "null" = "$ver" ]; then
            echo "inspected image version must not be empty or null"
            exit 1
          fi
          echo "VERSION=$ver" >> $GITHUB_OUTPUT

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ steps.registry_case.outputs.lowercase }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.version=${{ steps.labels.outputs.VERSION }}
          tags: |
            type=ref,event=tag
            type=sha,format=long
            type=ref,event=branch
            type=schedule,pattern=nightly

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          oci: false
          layers: true
          tags: |
            ${{steps.meta.outputs.tags}}
          labels: |
            ${{ steps.meta.outputs.labels }}
          containerfiles: |
            ./Containerfile
          build-args: |
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            IMAGE_FLAVOR=${{ env.IMAGE_FLAVOR }}
            AKMODS_FLAVOR=${{ env.AKMODS_FLAVOR }}
            IMAGE_VENDOR=${{ github.repository_owner }}
            FEDORA_MAJOR_VERSION=${{ env.FEDORA_MAJOR_VERSION }}
          extra-args: |
            --target=${{ env.IMAGE_NAME }}

  sign:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      id-token: write
      packages: write

    steps:
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: sigstore/cosign-installer@v3

      - name: Sign the images
        run: cosign sign -y ${TAGS}
        env:
          TAGS: ${{needs.build.outputs.tags}}

      - name: Verify the pushed tags
        run: |
          cosign verify \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            --certificate-identity-regexp "${{ github.server_url }}/${{ github.repository }}" \
            ${TAGS}
        env:
          TAGS: ${{needs.build.outputs.tags}}
